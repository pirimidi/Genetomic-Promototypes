# Sample SpecTcl main program for testing GUI

use vars qw( $example_checkbutton $example_checkbutton $my_sacle
$example_scale $entry $example_radiobutton );

$my_sacle = 0;
$example_scale = 0;

use Tk;
require Tk::Menu;
my($top) = MainWindow->new();
$top->title("trip test");


# interface generated by SpecTcl (Perl enabled) version 1.1 
# from trip.ui
# For use with Tk402.002, using the grid geometry manager

sub trip_ui {
	my($root) = @_;

	# widget creation 

	my($frame_1) = $root->Frame (
	);
	my($frame_2) = $root->Frame (
	);
	my($frame_3) = $root->Frame (
	);
	my($frame_5) = $root->Frame (
		-background => 'grey',
	);
	my($frame_4) = $root->Frame (
	);
	my($button_1) = $root->Button (
		-activeforeground => 'green',
		-anchor => 'nw',
		-background => 'grey',
		-borderwidth => '5',
		-cursor => 'hand1',
		-disabledforeground => 'magenta',
		-foreground => 'red',
		-highlightthickness => '3',
		-justify => 'left',
		-padx => '4',
		-pady => '10',
		-text => 'exit',
		-width => '5',
	);
	my($message_1) = $root->Message (
		-text => 'hi!',
	);
	my($scale_1) = $root->Scale (
		-background => 'magenta',
		-font => '-*-Helvetica-Bold-R-Normal-*-*-120-*-*-*-*-*-*',
		-label => 'size',
		-orient => 'h',
		-variable => \$my_sacle,
	);
	my($entry_1) = $root->Entry (
		-textvariable => \$entry,
	);
	my($checkbutton_1) = $root->Checkbutton (
		-relief => 'sunken',
		-selectcolor => 'blue',
		-text => 'check 1',
		-variable => \$example_checkbutton,
	);
	my($button_2) = $root->Button (
		-activeforeground => 'red',
		-background => 'blue',
		-foreground => 'red',
		-text => 'my button',
	);
	my($label_1) = $root->Label (
		-text => 'important label',
	);
	my($scale_2) = $root->Scale (
		-background => '#c0c06a',
		-label => 'scaler',
		-orient => 'v',
		-variable => \$example_scale,
	);
	my($text_1) = $root->Text (
		-height => '1',
		-width => '1',
	);
	my($menubutton_1) = $root->Menubutton (
		-background => 'green',
		-bitmap => 'info',
		-cursor => 'circle',
		-text => 'invisible',
	);
	my($checkbutton_3) = $root->Checkbutton (
		-background => 'white',
		-text => 'check 2',
		-variable => \$example_checkbutton,
	);
	my($menubutton_2) = $root->Menubutton (
		-text => 'my menu 1',
	);
	my($listbox_1) = $root->Listbox (
		-height => '0',
		-width => '0',
	);
	my($canvas_1) = $root->Canvas (
		-height => '0',
		-width => '0',
	);
	my($radiobutton_1) = $root->Radiobutton (
		-activeforeground => 'black',
		-background => 'magenta',
		-foreground => 'black',
		-text => 'radio #1',
		-variable => \$example_radiobutton,
	);
	my($scrollbar_1) = $root->Scrollbar (
		-background => 'red',
		-orient => 'h',
	);

	# widget commands

	$button_1->configure(
		-command => sub{exit}
	);

	# Geometry management

	$frame_1->grid(
		-in => $root,
		-column => '1',
		-row => '4',
		-columnspan => '2'
	);
	$frame_2->grid(
		-in => $frame_1,
		-column => '2',
		-row => '1',
		-rowspan => '2'
	);
	$frame_3->grid(
		-in => $frame_2,
		-column => '3',
		-row => '1'
	);
	$frame_5->grid(
		-in => $frame_2,
		-column => '1',
		-row => '2'
	);
	$frame_4->grid(
		-in => $frame_3,
		-column => '2',
		-row => '1',
		-columnspan => '2'
	);
	$button_1->grid(
		-in => $root,
		-column => '1',
		-row => '1'
	);
	$message_1->grid(
		-in => $root,
		-column => '2',
		-row => '1'
	);
	$scale_1->grid(
		-in => $root,
		-column => '4',
		-row => '1',
		-sticky => 'ew'
	);
	$entry_1->grid(
		-in => $root,
		-column => '6',
		-row => '1'
	);
	$checkbutton_1->grid(
		-in => $root,
		-column => '1',
		-row => '2'
	);
	$button_2->grid(
		-in => $root,
		-column => '2',
		-row => '2',
		-columnspan => '3'
	);
	$label_1->grid(
		-in => $root,
		-column => '6',
		-row => '2'
	);
	$scale_2->grid(
		-in => $root,
		-column => '3',
		-row => '4',
		-rowspan => '3',
		-sticky => 'ns'
	);
	$text_1->grid(
		-in => $root,
		-column => '4',
		-row => '4',
		-rowspan => '2',
		-sticky => 'nesw'
	);
	$menubutton_1->grid(
		-in => $root,
		-column => '6',
		-row => '4'
	);
	$checkbutton_3->grid(
		-in => $frame_4,
		-column => '1',
		-row => '1'
	);
	$menubutton_2->grid(
		-in => $frame_5,
		-column => '1',
		-row => '1'
	);
	$listbox_1->grid(
		-in => $root,
		-column => '1',
		-row => '5',
		-sticky => 'nesw'
	);
	$canvas_1->grid(
		-in => $root,
		-column => '2',
		-row => '5',
		-sticky => 'nesw'
	);
	$radiobutton_1->grid(
		-in => $root,
		-column => '6',
		-row => '5'
	);
	$scrollbar_1->grid(
		-in => $root,
		-column => '6',
		-row => '6',
		-sticky => 'ew'
	);

	# Resize behavior management

	# container $frame_2 (rows)
	$frame_2->gridRowconfigure(1, -weight  => 0, -minsize  => 67);
	$frame_2->gridRowconfigure(2, -weight  => 0, -minsize  => 60);

	# container $frame_2 (columns)
	$frame_2->gridColumnconfigure(1, -weight => 0, -minsize => 156);
	$frame_2->gridColumnconfigure(2, -weight => 0, -minsize => 30);
	$frame_2->gridColumnconfigure(3, -weight => 0, -minsize => 65);

	# container $frame_3 (rows)
	$frame_3->gridRowconfigure(1, -weight  => 0, -minsize  => 53);

	# container $frame_3 (columns)
	$frame_3->gridColumnconfigure(1, -weight => 0, -minsize => 33);
	$frame_3->gridColumnconfigure(2, -weight => 0, -minsize => 30);
	$frame_3->gridColumnconfigure(3, -weight => 0, -minsize => 30);

	# container $frame_4 (rows)
	$frame_4->gridRowconfigure(1, -weight  => 0, -minsize  => 47);
	$frame_4->gridRowconfigure(2, -weight  => 0, -minsize  => 30);

	# container $frame_4 (columns)
	$frame_4->gridColumnconfigure(1, -weight => 0, -minsize => 30);

	# container $root (rows)
	$root->gridRowconfigure(1, -weight  => 0, -minsize  => 64);
	$root->gridRowconfigure(2, -weight  => 0, -minsize  => 30);
	$root->gridRowconfigure(3, -weight  => 0, -minsize  => 159);
	$root->gridRowconfigure(4, -weight  => 1, -minsize  => 72);
	$root->gridRowconfigure(5, -weight  => 0, -minsize  => 98);
	$root->gridRowconfigure(6, -weight  => 0, -minsize  => 30);

	# container $root (columns)
	$root->gridColumnconfigure(1, -weight => 0, -minsize => 30);
	$root->gridColumnconfigure(2, -weight => 0, -minsize => 67);
	$root->gridColumnconfigure(3, -weight => 0, -minsize => 184);
	$root->gridColumnconfigure(4, -weight => 1, -minsize => 60);
	$root->gridColumnconfigure(5, -weight => 0, -minsize => 30);
	$root->gridColumnconfigure(6, -weight => 1, -minsize => 150);

	# container $frame_5 (rows)
	$frame_5->gridRowconfigure(1, -weight  => 0, -minsize  => 30);

	# container $frame_5 (columns)
	$frame_5->gridColumnconfigure(1, -weight => 0, -minsize => 184);

	# container $frame_1 (rows)
	$frame_1->gridRowconfigure(1, -weight  => 0, -minsize  => 81);
	$frame_1->gridRowconfigure(2, -weight  => 0, -minsize  => 97);

	# container $frame_1 (columns)
	$frame_1->gridColumnconfigure(1, -weight => 0, -minsize => 30);
	$frame_1->gridColumnconfigure(2, -weight => 0, -minsize => 168);

	# additional interface code



	# end additional interface code
}
trip_ui $top;
Tk::MainLoop;

1;
